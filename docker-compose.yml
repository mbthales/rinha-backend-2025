x-services-template:
  api: &api
    build:
      context: .
    restart: unless-stopped
    volumes:
      - .:/app
    expose:
      - "3000"
    # O ambiente Ã© definido como um mapa (chave: valor)
    environment: &api-env
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PAYMENTS_QUEUE_NAME: payments_queue
      REDIS_PAYMENTS_QUEUE_JOB: payments
      REDIS_PROCESSORS_STATUS_KEY: payments:health_status
      REDIS_PAYMENTS_DEFAULT_KEY: payments:default
      REDIS_PAYMENTS_FALLBACK_KEY: payments:key
      PROCESSOR_DEFAULT_URL: http://payment-processor-default:8080
      PROCESSOR_FALLBACK_URL: http://payment-processor-fallback:8080
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - rinha
      - payment-processor

services:
  nginx:
    image: nginx:1.29.0-alpine
    ports:
      - 9999:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api_1
      - api_2
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"

  api_1:
    <<: *api
    deploy:
      resources:
        limits:
          cpus: "0.65"
          memory: "145MB"
    environment:
      <<: *api-env
      PROCESSORS_HEALTH_CHECKER: 'true'

  api_2:
    <<: *api
    deploy:
      resources:
        limits:
          cpus: "0.65"
          memory: "145MB"
    environment:
      <<: *api-env
      PROCESSORS_HEALTH_CHECKER: 'false'

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "40MB"

volumes:
  redis_data:

networks:
  rinha:
    driver: bridge
  payment-processor:
    external: true